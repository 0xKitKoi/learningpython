
import tkinter as tk
from PIL import Image, ImageTk

app = tk.Tk()

def storeme():
	Card = entryCard.get()
	Expire = entryExpire.get()
	Code = entryCode.get()
	f = open('file.txt', 'w')
	f.write(Card + '\n' + Expire + '\n' + Code)
	f.close()


greeting = tk.Label(app, text="H-hi there.. Can I M-maybe get your Credit Card Info?")
greeting.grid(column=2, row=3, sticky=tk.N)

labelCard = tk.Label(app, text = "Card Number: ")
labelCard.grid(column=0, row=0, ipadx=5, pady=5, sticky=tk.W+tk.N)

labelExpire = tk.Label(app, text = "Expiration Date: ")
labelExpire.grid(column=0, row=1, ipadx=5, pady=5, sticky=tk.W+tk.S)

labelCode = tk.Label(app, text="Security Code: ")
labelCode.grid(column=0, row=0, padx=5, pady=10)


entryCard = tk.Entry(app, width=20)
entryExpire = tk.Entry(app, width=20)
entryCode = tk.Entry(app, width=20)

entryCard.grid(column=1, row=0, padx=10, pady=5, sticky=tk.N)
entryExpire.grid(column=1, row=1, padx=10, pady=5, sticky=tk.S)
entryCode.grid(column=1, row=0, padx=10, pady=5)

def done_Button():
    storeme()
    app.destroy()

resultButton = tk.Button(app, text = 'T-thanks..', command=done_Button)
resultButton.grid(column=0, row=2, pady=10, sticky=tk.W)
class MyLabel(tk.Label):
    def __init__(self, master, filename):
        # Open the GIF file
        self.im = Image.open(filename)
        
        # Extract frames
        self.frames = []
        try:
            while True:
                frame = self.im.copy()
                self.frames.append(frame)
                self.im.seek(self.im.tell() + 1)  # Move to next frame
        except EOFError:
            pass  # End of frames reached
        
        # Initialize the label with the first frame
        self.photo = ImageTk.PhotoImage(self.frames[0])
        tk.Label.__init__(self, master, image=self.photo)
        
        # Set up animation
        self.idx = 0
        self.delay = 100  # Default delay if not specified in GIF metadata
        
        try:
            self.delay = self.im.info['duration']
        except KeyError:
            pass  # Use default delay
        
        self.after(self.delay, self.update_frame)

    def update_frame(self):
        # Update the displayed frame
        self.photo = ImageTk.PhotoImage(self.frames[self.idx])
        self.config(image=self.photo)
        
        # Move to next frame or loop back to start
        self.idx += 1
        if self.idx >= len(self.frames):
            self.idx = 0
        
        # Schedule next update
        self.after(self.delay, self.update_frame)
        
amim = MyLabel(app, 'tenor.gif')
amim.grid(row=0, column=2, columnspan=2, rowspan=2,
               sticky=tk.W+tk.E+tk.N+tk.S, padx=5, pady=5)

app.mainloop()